/*
Copyright 2012 Google Inc.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

syntax = "proto3";

option go_package = ".";

package testpb;

message TestMessage {
  string name = 1;
  string city = 2;
}

message TestRequest {
  string lower = 1; // to be returned upper case
  int32 repeat_count = 2; // .. this many times
}

message TestResponse {
  string value = 1;
}

message CacheStats {
  int64 items = 1;
  int64 bytes = 2;
  int64 gets = 3;
  int64 hits = 4;
  int64 evicts = 5;
}

message StatsResponse {
  int64 gets = 1;
  int64 cache_hits = 12;
  int64 fills = 2;
  uint64 total_alloc = 3;
  CacheStats main_cache = 4;
  CacheStats hot_cache = 5;
  int64 server_in = 6;
  int64 loads = 8;
  int64 peer_loads = 9;
  int64 peer_errors = 10;
  int64 local_loads = 11;
}

message Empty {}

service GroupCacheTest {
  rpc InitPeers(Empty) returns (Empty) {};
  rpc Get(TestRequest) returns (TestResponse) {};
  rpc GetStats(Empty) returns (StatsResponse) {};
}
